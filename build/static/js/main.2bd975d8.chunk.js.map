{"version":3,"sources":["components/WindowButtons.js","reducers/notification.js","components/Notification.js","utils/config.js","utils/logger.js","services/login.js","services/users.js","reducers/windows.js","reducers/session.js","components/NavBar.js","components/Footer.js","pages/SignUp.js","pages/SignIn.js","pages/OwnUser.js","pages/Home.js","pages/Users.js","services/twoods.js","reducers/twoods.js","pages/Twoods.js","services/rooms.js","pages/Rooms.js","pages/index.js","styles/index.js","components/StandardWindow.js","hooks/index.js","components/StandardTable.js","components/Profile.js","components/windows/Users.js","components/Twood.js","components/Room.js","components/windows/index.js","components/windows/SignIn.js","components/windows/SignUp.js","components/windows/Twoods.js","components/windows/Rooms.js","components/windows/OwnUser.js","WindowRenderer.js","App.js","store.js","index.js"],"names":["CloseIcon","styled","div","theme","materialText","MinimizeIcon","CloseButton","click","style","float","margin","onClick","MinimizeButton","info","message","duration","dispatch","a","type","timeout","setTimeout","data","error","notificationReducer","state","action","newState","clearTimeout","Notification","notification","useSelector","useDispatch","backgroundColor","className","position","left","width","onClose","API_URL","process","baseUrl","auth","user","logger","axios","post","res","getAll","get","create","newUser","getById","id","remove","delete","update","put","initialState","current","last","storageChecked","items","updateLocalStorage","window","localStorage","setItem","JSON","stringify","initWindows","parse","getItem","map","item","addWindow","x","y","Math","floor","random","minimized","closeWindow","windowReducer","newItem","identical","find","_","isEqual","concat","filter","token","sessionReducer","MainDropDown","setOpen","top","to","role","SecondaryDropDown","signOut","removeItem","right","zIndex","aria-label","NavBar","session","useState","mainOpen","setMainOpen","secondaryOpen","setSecondaryOpen","justifyContent","display","active","fontWeight","alt","height","marginRight","username","Footer","windows","maximize","maximizeWindow","bottom","variant","shadow","padding","lineHeight","key","SignUp","useEffect","SignIn","OwnUser","Home","SingleUser","useParams","getUser","userService","Users","getUsers","newTwood","headers","Authorization","getByUser","obj","like","reply","addTwood","twood","likeTwood","twoodService","likes","replyTwood","replies","removeTwood","twoodReducer","newTwoods","found","SingleTwood","getTwood","err","Twoods","getTwoods","NewTwood","newRoom","SingleRoom","getRoom","roomService","Rooms","getRooms","NewRoom","Routing","path","GlobalStyles","createGlobalStyle","styleReset","ms_sans_serif","ms_sans_serif_bold","StyleWrapper","props","original","children","StandardWindow","history","useHistory","cancel","onMouseDown","selectWindow","onDrag","e","updateWindowPosition","title","push","minimizeWindow","useField","value","setValue","input","onChange","event","target","clear","useTwood","twoods","replyField","content","preventDefault","operations","tableTypes","users","rooms","StandardTable","index","setIndex","pages","setPages","pageSize","sortOrder","setSortOrder","initPages","list","nofPages","ceil","length","temp","count","i","j","next","prev","sort","head","b","usePages","tableType","cell","disabled","Profile","TwoodReply","label","Twood","size","Room","room","name","windowIndex","signin","nameField","passwordField","styles","primary","password","windowId","loginService","manualSignIn","signup","signUp","newtwood","titleField","contentField","multiline","newroom","ownuser","WindowRenderer","Component","App","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bd975d8.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Button} from 'react95'\r\n\r\nconst CloseIcon = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-left: -1px;\r\n  margin-top: -1px;\r\n  transform: rotateZ(45deg);\r\n  position: relative;\r\n  :before,\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${({theme}) => theme.materialText};\r\n  }\r\n  :before {\r\n    height: 100%;\r\n    width: 3px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n  :after {\r\n    height: 3px;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst MinimizeIcon = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-left: -1px;\r\n  margin-top: -1px;\r\n  position: relative;\r\n  :before,\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: ${({theme}) => theme.materialText};\r\n  }\r\n  :after {\r\n    height: 3px;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nexport const CloseButton = ({click}) => {\r\n    return (\r\n        <Button\r\n            style={{float: 'right', margin: '3px'}}\r\n            onClick={() => click()}\r\n        >\r\n            <CloseIcon/>\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport const MinimizeButton = ({click}) => {\r\n    return (\r\n        <Button\r\n            style={{float: 'right', margin: '3px'}}\r\n            onClick={() => click()}\r\n        >\r\n            <MinimizeIcon/>\r\n        </Button>\r\n    )\r\n}","const notificationReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n    case 'DISPLAY_INFO': {\r\n        const newState = {\r\n            type: 'Notification',\r\n            message: action.data.message,\r\n            timeout: action.data.timeout\r\n        }\r\n        return newState\r\n    }\r\n    case 'DISPLAY_ERROR': {\r\n        const newState = {\r\n            type: 'Error',\r\n            message: action.data.message,\r\n            timeout: action.data.timeout\r\n        }\r\n        return newState\r\n    }\r\n    case 'RESET_NOTIFICATION': {\r\n        if (state) {\r\n            clearTimeout(state.timeout)\r\n        }\r\n        return null\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const info = (message, duration) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'RESET_NOTIFICATION',\r\n        })\r\n\r\n        const timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'RESET_NOTIFICATION',\r\n            })\r\n        }, duration*1000)\r\n\r\n        dispatch({\r\n            type: 'DISPLAY_INFO',\r\n            data: {message, timeout}\r\n        })\r\n    }\r\n}\r\n\r\nexport const error = (message, duration) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'RESET_NOTIFICATION',\r\n        })\r\n\r\n        const timeout = setTimeout(() => {\r\n            dispatch({\r\n                type: 'RESET_NOTIFICATION',\r\n            })\r\n        }, duration*1000)\r\n\r\n        dispatch({\r\n            type: 'DISPLAY_ERROR',\r\n            data: {message, timeout}\r\n        })\r\n    }\r\n}\r\n\r\nexport const clear = () => {\r\n    return {\r\n        type: 'RESET_NOTIFICATION',\r\n    }\r\n}\r\n\r\nexport default notificationReducer","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport {Window, WindowHeader, WindowContent} from 'react95'\r\nimport {CloseButton} from './WindowButtons'\r\nimport {clear} from '../reducers/notification'\r\n\r\nconst Notification = () => {\r\n    const notification = useSelector(state => state.notification)\r\n    const dispatch = useDispatch()\r\n\r\n    if (notification === null) return null\r\n\r\n    const style = (notification.type === 'Error') ? {backgroundColor: 'red'} : null\r\n\r\n    return (\r\n        <Window className='window' style={{position: 'absolute', left: '80%', width: '20%'}}>\r\n            <WindowHeader className='window-header' style={style}>\r\n                <span>{notification.type}</span>\r\n                <CloseButton onClose={() => dispatch(clear())}></CloseButton>\r\n            </WindowHeader>\r\n            <WindowContent>{notification.message}</WindowContent>\r\n        </Window>\r\n    )\r\n}\r\n\r\nexport default Notification","let API_URL = process.env.REACT_APP_API_URL\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n    API_URL = '/'\r\n}\r\n\r\nexport {\r\n    API_URL\r\n}","export default {\r\n    info: (...params) => {\r\n        if (process.env.NODE_ENV !== 'test' && process.env.NODE_ENV !== 'production') {\r\n            console.log(...params)\r\n        }\r\n    },\r\n\r\n    error: (...params) => {\r\n        if (process.env.NODE_ENV !== 'test' && process.env.NODE_ENV !== 'production') {\r\n            console.error(...params)\r\n        }\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nimport {API_URL} from '../utils/config'\r\nimport logger from '../utils/logger'\r\n\r\nconst extension = 'api/login/'\r\nconst baseUrl = API_URL + extension\r\n\r\nexport default {\r\n    auth: async (user) => {\r\n        try {\r\n            logger.info(extension, 'Authenticating user:', user)\r\n\r\n            const res = await axios.post(baseUrl, user)\r\n\r\n            logger.info(extension, 'User authenticated', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n}","import axios from 'axios'\r\n\r\nimport {API_URL} from '../utils/config'\r\nimport logger from '../utils/logger'\r\n\r\nconst extension = 'api/users/'\r\nconst baseUrl = API_URL + extension\r\n\r\nexport default {\r\n    getAll: async () => {\r\n        try {\r\n            logger.info(extension, 'Fetching users')\r\n\r\n            const res = await axios.get(baseUrl)\r\n\r\n            logger.info(extension, 'Users fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    create: async (newUser) => {\r\n        try {\r\n            logger.info(extension, 'Creating user', newUser)\r\n\r\n            const res = await axios.post(baseUrl, newUser)\r\n\r\n            logger.info(extension, 'User created', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    getById: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Fetching user', id)\r\n\r\n            const res = await axios.get(baseUrl + id)\r\n\r\n            logger.info(extension, 'User fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    remove: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Deleting user', id)\r\n\r\n            const res = await axios.delete(baseUrl + id)\r\n\r\n            logger.info(extension, 'User deleted', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    update: async (id, newUser) => {\r\n        try {\r\n            logger.info(extension, 'Updating user', id, newUser)\r\n\r\n            const res = await axios.put(`${baseUrl}${id}`, newUser)\r\n\r\n            logger.info(extension, 'User updated', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n}","import _ from 'lodash'\r\n\r\nconst initialState = {\r\n    current: 0,\r\n    last: 0,\r\n    storageChecked: false,\r\n    items: []\r\n}\r\n\r\nconst updateLocalStorage = (state) => {\r\n    if (state.storageChecked) {\r\n        window.localStorage.setItem('windows', JSON.stringify(state))\r\n    }\r\n\r\n}\r\n\r\n\r\nconst windowReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case 'ADD_WINDOW': {\r\n        const newItem = action.data\r\n\r\n        const identical = state.items.find(item => {\r\n            if (item.type === newItem.type) {\r\n                if (!item.initialState) {\r\n                    return true\r\n                }\r\n                if (_.isEqual(item.initialState, newItem.initialState)) {\r\n                    return true\r\n                }\r\n            }\r\n        })\r\n\r\n        if (identical) {\r\n            if (!state.storageChecked) {\r\n                const newState = {\r\n                    ...state,\r\n                    items: state.items.map(item => (item.id === identical.id) ? newItem : item)\r\n                }\r\n\r\n                return newState\r\n            }\r\n            return state\r\n        }\r\n\r\n        const newState = {\r\n            ...state,\r\n            current: newItem.id,\r\n            last: newItem.id,\r\n            items: state.items.concat(newItem)\r\n        }\r\n\r\n\r\n        updateLocalStorage(newState)\r\n        return newState\r\n    }\r\n    case 'CLOSE_WINDOW': {\r\n        const newState = {\r\n            ...state,\r\n            items: state.items.filter(item => item.id !== action.data)\r\n        }\r\n\r\n        updateLocalStorage(newState)\r\n        return newState\r\n    }\r\n    case 'UPDATE_WINDOW': {\r\n        const newItem = action.data\r\n        const newState = {\r\n            ...state,\r\n            items: state.items.map(item => (item.id === newItem.id) ? newItem : item)\r\n        }\r\n\r\n        updateLocalStorage(newState)\r\n\r\n        return newState\r\n    }\r\n    case 'SET_CURRENT_WINDOW': {\r\n        const newState = {\r\n            ...state,\r\n            current: action.data,\r\n        }\r\n        return newState\r\n    }\r\n    case 'RESET_CURRENT_WINDOW': {\r\n        const newState = {\r\n            ...state,\r\n            current: null,\r\n        }\r\n        return newState\r\n    }\r\n    case 'INIT_WINDOWS': {\r\n        const newState = {\r\n            ...state,\r\n            storageChecked: true\r\n        }\r\n\r\n        return newState\r\n    }\r\n    case 'RESET_WINDOWS': {\r\n        return []\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\n/*TODO: fix router rendering new window before windows can be initialized */\r\nexport const initWindows = () => {\r\n    const initialState = JSON.parse(window.localStorage.getItem('windows'))\r\n\r\n    return dispatch => {\r\n        if (initialState) {\r\n            if (initialState.items) {\r\n                initialState.items.map(item => {\r\n                    dispatch ({\r\n                        type: 'ADD_WINDOW',\r\n                        data: item\r\n                    })\r\n                })\r\n            }\r\n        }\r\n\r\n        dispatch ({type: 'INIT_WINDOWS'})\r\n    }\r\n}\r\n\r\n/*TODO: generalize update helpers */\r\nexport const addWindow = (type, initialState, x, y) => {\r\n    const newWindow = {\r\n        type,\r\n        initialState,\r\n        x: (x) ? x : 0,\r\n        y: (y) ? y : 0,\r\n        id: Math.floor(Math.random()*10000),\r\n        minimized: false\r\n    }\r\n    return {\r\n        type: 'ADD_WINDOW',\r\n        data: newWindow\r\n    }\r\n}\r\n\r\nexport const updateWindowPosition = (item, x, y) => {\r\n    const newWindow = {\r\n        ...item,\r\n        x,\r\n        y,\r\n    }\r\n    return {\r\n        type: 'UPDATE_WINDOW',\r\n        data: newWindow\r\n    }\r\n}\r\n\r\nexport const minimizeWindow = (item) => {\r\n    const newWindow = {\r\n        ...item,\r\n        minimized: true\r\n    }\r\n    return {\r\n        type: 'UPDATE_WINDOW',\r\n        data: newWindow\r\n    }\r\n}\r\n\r\nexport const maximizeWindow = (item) => {\r\n    const newWindow = {\r\n        ...item,\r\n        minimized: false\r\n    }\r\n    return {\r\n        type: 'UPDATE_WINDOW',\r\n        data: newWindow\r\n    }\r\n}\r\n\r\n\r\nexport const closeWindow = (id) => {\r\n    return {\r\n        type: 'CLOSE_WINDOW',\r\n        data: id\r\n    }\r\n}\r\n\r\nexport const selectWindow = (id) => {\r\n    return {\r\n        type: 'SET_CURRENT_WINDOW',\r\n        data: id\r\n    }\r\n}\r\n\r\nexport const resetSelected = () => {\r\n    return {\r\n        type: 'RESET_CURRENT_WINDOW',\r\n    }\r\n}\r\n\r\nexport default windowReducer","import loginService from '../services/login'\r\nimport userService from '../services/users'\r\n\r\nimport {info, error} from './notification'\r\nimport {closeWindow, initWindows} from './windows'\r\n\r\nconst initialState = {\r\n    user: null,\r\n    token: null,\r\n    storageChecked: false\r\n}\r\nconst sessionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case 'INIT_SESSION': {\r\n        return {\r\n            ...action.data,\r\n            storageChecked: true\r\n        }\r\n    }\r\n    case 'RESET_SESSION': {\r\n        return {\r\n            ...initialState,\r\n            storageChecked: true\r\n        }\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const manualSignIn = (username, password, windowId) => {\r\n    return async dispatch => {\r\n        const user = {username, password}\r\n\r\n        try {\r\n            const res = await loginService.auth(user)\r\n\r\n            window.localStorage.setItem('id', res.user.id)\r\n            window.localStorage.setItem('token', res.token)\r\n\r\n            dispatch({\r\n                type: 'INIT_SESSION',\r\n                data: res\r\n            })\r\n\r\n            dispatch(closeWindow(windowId))\r\n\r\n            dispatch(info('Successfully logged in', 5))\r\n        } catch (err) {\r\n            dispatch(error('Failed to log in, password or username incorrect', 5))\r\n        }\r\n    }\r\n}\r\n\r\nexport const continueSession = () => {\r\n    return async dispatch => {\r\n        const id = window.localStorage.getItem('id')\r\n        const token = window.localStorage.getItem('token')\r\n\r\n        dispatch(initWindows())\r\n\r\n        if (id && token) {\r\n            try {\r\n                const user = await userService.getById(id)\r\n\r\n                dispatch({\r\n                    type: 'INIT_SESSION',\r\n                    data: {\r\n                        user,\r\n                        token\r\n                    }\r\n                })\r\n\r\n            } catch (err) {\r\n                window.localStorage.removeItem('id')\r\n                window.localStorage.removeItem('token')\r\n\r\n                dispatch({\r\n                    type: 'RESET_SESSION'\r\n                })\r\n            }\r\n        } else {\r\n            dispatch({\r\n                type: 'RESET_SESSION'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const endSession = () => {\r\n    return async dispatch => {\r\n        window.localStorage.removeItem('id')\r\n        window.localStorage.removeItem('token')\r\n\r\n        dispatch(info('Successfully logged out', 5))\r\n\r\n        dispatch({\r\n            type: 'RESET_SESSION'\r\n        })\r\n    }\r\n}\r\n\r\nexport default sessionReducer","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {AppBar, Toolbar, Button, List, ListItem, Divider} from 'react95'\r\n\r\nimport {endSession} from '../reducers/session'\r\nimport {resetSelected} from '../reducers/windows'\r\n\r\nconst NavBar = () => {\r\n    const user = useSelector(state => state.session.user)\r\n    const dispatch = useDispatch()\r\n    const [mainOpen, setMainOpen] = useState(false)\r\n    const [secondaryOpen, setSecondaryOpen] = useState(false)\r\n\r\n    const openMain = () => {\r\n        if (!mainOpen) {\r\n            dispatch(resetSelected())\r\n        }\r\n        setMainOpen(!mainOpen)\r\n    }\r\n\r\n    const openSecondary = () => {\r\n        if (!secondaryOpen) {\r\n            dispatch(resetSelected())\r\n        }\r\n        setSecondaryOpen(!secondaryOpen)\r\n    }\r\n    return(\r\n        <AppBar style={{position: 'relative', zIndex: 12}}>\r\n            <Toolbar style={{justifyContent: 'space-between'}}>\r\n\r\n                {/* main drop down */}\r\n                <div style={{position: 'relative', display: 'inline-block'}}>\r\n                    <Button\r\n                        onClick={() => openMain()}\r\n                        active={mainOpen}\r\n                        style={{fontWeight: 'bold'}}\r\n                    >\r\n                        <img\r\n                            alt='logo'\r\n                            style={{height: '20px', marginRight: 4}}\r\n                        />\r\n                        Twooder\r\n                    </Button>\r\n                    {mainOpen && <MainDropDown setOpen={setMainOpen}/>}\r\n                </div>\r\n\r\n                {/* secondary drop down */}\r\n                {user ?\r\n                    <div style={{position: 'relative', display: 'inline-block'}}>\r\n                        <Button\r\n                            onClick={() => openSecondary()}\r\n                            active={secondaryOpen}\r\n                            style={{fontWeight: 'bold'}}\r\n                        >\r\n                            {user.username}\r\n                        </Button>\r\n                        {secondaryOpen && <SecondaryDropDown setOpen={setSecondaryOpen}/>}\r\n                    </div>\r\n                    :\r\n                    <Link to=\"/signin\">\r\n                        <div style={{position: 'relative', display: 'inline-block'}}>\r\n                            <Button\r\n                                style={{fontWeight: 'bold'}}\r\n                            >\r\n                                Sign In\r\n                            </Button>\r\n                        </div>\r\n                    </Link>\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\n\r\nconst MainDropDown = ({setOpen}) => {\r\n    return (\r\n        <List\r\n            style={{\r\n                position: 'absolute',\r\n                left: '0',\r\n                top: '100%',\r\n            }}\r\n            onClick={() => setOpen(false)}\r\n        >\r\n            <Link to=\"/\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        ✉️\r\n                    </span>\r\n                    Home\r\n                </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link to=\"/twoods\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        ✉️\r\n                    </span>\r\n                    Twoods\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/users\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        👨‍💻\r\n                    </span>\r\n                    Users\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/rooms\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        📁\r\n                    </span>\r\n                     Rooms\r\n                </ListItem>\r\n            </Link>\r\n        </List>\r\n    )\r\n}\r\n\r\nconst SecondaryDropDown = ({setOpen}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const signOut = () => {\r\n        dispatch(endSession())\r\n    }\r\n    return (\r\n        <List\r\n            style={{\r\n                position: 'absolute',\r\n                right: '0',\r\n                top: '100%',\r\n                zIndex: 13\r\n            }}\r\n            onClick={() => setOpen(false)}\r\n        >\r\n            <Link to=\"/user\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        👨‍💻\r\n                    </span>\r\n                    Profile\r\n                </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link to=\"/newtwood\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        📁\r\n                    </span>\r\n                    Create Twood\r\n                </ListItem>\r\n            </Link>\r\n            <Link to=\"/newroom\">\r\n                <ListItem>\r\n                    <span role='img'>\r\n                        📁\r\n                    </span>\r\n                    Create Room\r\n                </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <ListItem onClick={() => signOut()}>\r\n                <span role='img' aria-label='🔙'>\r\n                    🔙\r\n                </span>\r\n                Sign Out\r\n            </ListItem>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Panel, Bar, Toolbar, Button, List, ListItem, Divider} from 'react95'\r\n\r\nimport {closeWindow, maximizeWindow} from '../reducers/windows'\r\n\r\nconst Footer = () => {\r\n    const windows = useSelector(state => state.windows.items)\r\n    const dispatch = useDispatch()\r\n\r\n    const maximize = (item) => {\r\n        dispatch(maximizeWindow(item))\r\n    }\r\n\r\n    return(\r\n        <div style={{position: 'fixed', bottom: '0', left: '0', width: '100%', zIndex: 1000, display: 'inline-block'}}>\r\n            <Panel\r\n                variant='outside'\r\n                shadow\r\n                style={{padding: '1rem', lineHeight: '1.5', width: '100%',}}\r\n            >\r\n                {windows.map(window => {\r\n                    if (window.minimized) {\r\n                        return (\r\n                            <Button\r\n                                key={window.id}\r\n                                onClick={() => maximize(window)}\r\n                                variant='menu'\r\n                            >\r\n                                {window.type}\r\n                                <Divider></Divider>\r\n                            </Button>\r\n                        )\r\n                    }\r\n                })}\r\n            </Panel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('signup'))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nconst SignIn = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('signin'))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nconst OwnUser = () => {\r\n    const {user} = useSelector(state => state.session)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('ownuser', user))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\n\r\nexport default OwnUser","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport userService from '../services/users'\r\nimport {info, error} from '../reducers/notification'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nexport const SingleUser = () => {\r\n    const id = useParams().id\r\n    const dispatch = useDispatch()\r\n\r\n    const getUser = async () => {\r\n        try {\r\n            const res = await userService.getById(id)\r\n\r\n            dispatch(addWindow('user', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching user', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getUser()\r\n    }, [id])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const Users = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            const res = await userService.getAll()\r\n\r\n            dispatch(addWindow('users', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching users', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\n\r\nexport default Users","import axios from 'axios'\r\n\r\nimport {API_URL} from '../utils/config'\r\nimport logger from '../utils/logger'\r\n\r\nconst extension = 'api/twoods/'\r\nconst baseUrl = API_URL + extension\r\n\r\nexport default {\r\n    getAll: async () => {\r\n        try {\r\n            logger.info(extension, 'Fetching twoods')\r\n\r\n            const res = await axios.get(baseUrl)\r\n\r\n            logger.info(extension, 'Twoods fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    create: async (newTwood, token) => {\r\n        try {\r\n            logger.info(extension, 'Creating twood', newTwood)\r\n\r\n            const res = await axios.post(baseUrl, newTwood, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood created', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    getById: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Fetching twood', id)\r\n\r\n            const res = await axios.get(baseUrl + id)\r\n\r\n            logger.info(extension, 'Twood fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    getByUser: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Fetching twoods', id)\r\n\r\n            const res = await axios.get(baseUrl + 'user/' + id)\r\n\r\n            logger.info(extension, 'Twoods fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    remove: async (id, token) => {\r\n        try {\r\n            logger.info(extension, 'Deleting twood', id)\r\n\r\n            const res = await axios.delete(baseUrl + id, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood deleted', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    update: async (id, obj, token) => {\r\n        try {\r\n            const newTwood = {\r\n                ...obj,\r\n                user: (obj.user.id) ? obj.user.id : obj.user\r\n            }\r\n            logger.info(extension, 'Updating twood', id, newTwood)\r\n\r\n\r\n            const res = await axios.put(`${baseUrl}${id}`, newTwood, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood updated', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    like: async (id, token) => {\r\n        try {\r\n            logger.info(extension, 'Liking twood', id)\r\n\r\n\r\n            const res = await axios.post(`${baseUrl}${id}/like`, null, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood successfully liked', id, res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    reply: async (id, newTwood, token) => {\r\n        try {\r\n            logger.info(extension, 'Replying to twood', id, newTwood)\r\n\r\n\r\n            const res = await axios.post(`${baseUrl}${id}/reply`, newTwood, {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n\r\n            logger.info(extension, 'Twood replied to', id, res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    }\r\n}","import twoodService from '../services/twoods'\r\nimport {info, error} from '../reducers/notification'\r\n\r\nconst initialState = []\r\n\r\nconst twoodReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case 'ADD_TWOOD': {\r\n        if (action.data == []) {\r\n            const newTwoods = action.data.filter(newTwood => {\r\n                const found = state.find(twood => twood.id === newTwood.id)\r\n\r\n                if (found) {\r\n                    return false\r\n                } else {\r\n                    return true\r\n                }\r\n            })\r\n\r\n            return state.concat(newTwoods)\r\n        } else {\r\n            const newTwood = action.data\r\n            const found = state.find(twood => twood.id === newTwood.id)\r\n\r\n            if (found) {\r\n                return state\r\n            } else {\r\n                return state.concat(newTwood)\r\n            }\r\n        }\r\n    }\r\n    case 'REMOVE_TWOOD': {\r\n        return state.filter(item => item.id != action.data)\r\n    }\r\n    case 'UPDATE_TWOOD': {\r\n        const newTwood = action.data\r\n        return state.map(twood => (twood.id === newTwood.id) ? newTwood : twood)\r\n    }\r\n    case 'RESET_TWOODS': {\r\n        return initialState\r\n    }\r\n    default: return state\r\n    }\r\n}\r\n\r\nexport const addTwood = (twood) => {\r\n    return {\r\n        type: 'ADD_TWOOD',\r\n        data: twood\r\n    }\r\n}\r\n\r\nexport const likeTwood = (twood, token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await twoodService.like(twood.id, token)\r\n\r\n            dispatch({\r\n                type: 'UPDATE_TWOOD',\r\n                data: {\r\n                    ...twood,\r\n                    likes: res.likes\r\n                }\r\n            })\r\n\r\n            dispatch(info('Twood successfully liked', 5))\r\n        } catch (err) {\r\n            dispatch(error('Error liking twood', 5))\r\n        }\r\n    }\r\n}\r\n\r\nexport const replyTwood = (twood, newTwood, token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await twoodService.reply(twood.id, newTwood, token)\r\n\r\n            dispatch({\r\n                type: 'ADD_TWOOD',\r\n                data: res\r\n            })\r\n\r\n            dispatch({\r\n                type: 'UPDATE_TWOOD',\r\n                data: {\r\n                    ...twood,\r\n                    replies: twood.replies.concat(res)\r\n                }\r\n            })\r\n\r\n            dispatch(info('Twood successfully replied to', 5))\r\n        } catch (err) {\r\n            dispatch(error('Error replying to twood', 5))\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeTwood = (twood, token) => {\r\n    return async dispatch => {\r\n        try {\r\n            await twoodService.remove(twood.id, token)\r\n\r\n            dispatch({\r\n                type: 'REMOVE_TWOOD',\r\n                data: twood\r\n            })\r\n\r\n            dispatch(info('Twood successfully deleted', 5))\r\n        } catch (err) {\r\n            dispatch(error('Error deleting twood', 5))\r\n        }\r\n    }\r\n}\r\n\r\nexport default twoodReducer","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport twoodService from '../services/twoods'\r\nimport {info, error} from '../reducers/notification'\r\nimport {addWindow} from '../reducers/windows'\r\nimport {addTwood} from '../reducers/twoods'\r\n\r\nexport const SingleTwood = () => {\r\n    const id = useParams().id\r\n    const dispatch = useDispatch()\r\n\r\n    const getTwood = async () => {\r\n        try {\r\n            dispatch(addWindow('twood', id))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching twood', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getTwood()\r\n    }, [id])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const Twoods = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getTwoods = async () => {\r\n        try {\r\n            const res = await twoodService.getAll()\r\n\r\n            dispatch(addTwood(res))\r\n            dispatch(addWindow('twoods', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching twoods', 5))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTwoods()\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const NewTwood = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('newtwood'))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}","import axios from 'axios'\r\n\r\nimport {API_URL} from '../utils/config'\r\nimport logger from '../utils/logger'\r\n\r\nconst extension = 'api/rooms/'\r\nconst baseUrl = API_URL + extension\r\n\r\nexport default {\r\n    getAll: async () => {\r\n        try {\r\n            logger.info(extension, 'Fetching rooms')\r\n\r\n            const res = await axios.get(baseUrl)\r\n\r\n            logger.info(extension, 'Rooms fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    create: async (newRoom) => {\r\n        try {\r\n            logger.info(extension, 'Creating room', newRoom)\r\n\r\n            const res = await axios.post(baseUrl, newRoom)\r\n\r\n            logger.info(extension, 'Room created', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    getById: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Fetching room', id)\r\n\r\n            const res = await axios.get(baseUrl + id)\r\n\r\n            logger.info(extension, 'Room fetched', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    remove: async (id) => {\r\n        try {\r\n            logger.info(extension, 'Deleting room', id)\r\n\r\n            const res = await axios.delete(baseUrl + id)\r\n\r\n            logger.info(extension, 'Room deleted', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n    update: async (id, newRoom) => {\r\n        try {\r\n            logger.info(extension, 'Updating room', id, newRoom)\r\n\r\n            const res = await axios.put(`${baseUrl}${id}`, newRoom)\r\n\r\n            logger.info(extension, 'Room updated', res)\r\n\r\n            return res.data\r\n        } catch (err) {\r\n            logger.error(extension, err)\r\n            throw err\r\n        }\r\n    },\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams,} from 'react-router-dom'\r\n\r\nimport roomService from '../services/rooms'\r\nimport {info, error} from '../reducers/notification'\r\nimport {addWindow} from '../reducers/windows'\r\n\r\nexport const SingleRoom = () => {\r\n    const id = useParams().id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const getRoom = async () => {\r\n        try {\r\n            const res = await roomService.getById(id)\r\n\r\n            dispatch(addWindow('room', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching room', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getRoom()\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const Rooms = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getRooms = async () => {\r\n        try {\r\n            const res = await roomService.getAll()\r\n\r\n            dispatch(addWindow('rooms', res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching rooms', 5))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getRooms()\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}\r\n\r\nexport const NewRoom = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(addWindow('newroom'))\r\n    }, [])\r\n\r\n    return (\r\n        null\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport SignUp from './SignUp'\r\nimport SignIn from './SignIn'\r\nimport OwnUser from './OwnUser'\r\nimport Home from './Home'\r\nimport {Users, SingleUser} from './Users'\r\nimport {Twoods, SingleTwood, NewTwood} from './Twoods'\r\nimport {Rooms, SingleRoom, NewRoom} from './Rooms'\r\n\r\nconst Routing = () => {\r\n    const {user, storageChecked} = useSelector(state => state.session)\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/signin\">\r\n                {user ? storageChecked ? <Redirect to=\"/\"/> : <div/> : <SignIn/>}\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n                {user ? storageChecked ? <Redirect to=\"/\"/> : <div/> : <SignUp/>}\r\n            </Route>\r\n            <Route path=\"/twoods/:id\">\r\n                <SingleTwood/>\r\n            </Route>\r\n            <Route path=\"/twoods\">\r\n                <Twoods/>\r\n            </Route>\r\n            <Route path=\"/rooms/:id\">\r\n                <SingleRoom/>\r\n            </Route>\r\n            <Route path=\"/rooms\">\r\n                <Rooms/>\r\n            </Route>\r\n            <Route path=\"/users/:id\">\r\n                <SingleUser />\r\n            </Route>\r\n            <Route path=\"/users/\">\r\n                <Users/>\r\n            </Route>\r\n            <Route path=\"/user/\">\r\n                {user ? <OwnUser /> : storageChecked ? <Redirect to=\"/signin\" /> : <div/>}\r\n            </Route>\r\n            <Route path=\"/newtwood/\">\r\n                {user ? <NewTwood /> : storageChecked ? <Redirect to=\"/signin\" /> : <div/>}\r\n            </Route>\r\n            <Route path=\"/newroom\">\r\n                {user ? <NewRoom /> : storageChecked ? <Redirect to=\"/signin\" /> : <div/>}\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Home />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routing\r\n","import React from 'react'\r\nimport {createGlobalStyle, ThemeProvider, css} from 'styled-components'\r\n\r\nimport {styleReset} from 'react95'\r\n\r\nimport original from 'react95/dist/themes/original'\r\n\r\nimport ms_sans_serif from 'react95/dist/fonts/ms_sans_serif.woff2'\r\nimport ms_sans_serif_bold from 'react95/dist/fonts/ms_sans_serif_bold.woff2'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${styleReset}\r\n  @font-face {\r\n    font-family: 'ms_sans_serif';\r\n    src: url('${ms_sans_serif}') format('woff2');\r\n    font-weight: 400;\r\n    font-style: normal\r\n  }\r\n  @font-face {\r\n    font-family: 'ms_sans_serif';\r\n    src: url('${ms_sans_serif_bold}') format('woff2');\r\n    font-weight: bold;\r\n    font-style: normal\r\n  }\r\n  body {\r\n    font-family: 'ms_sans_serif';\r\n    background-color: #1abc9c;\r\n  }\r\n  * {\r\n    scrollbar-width: none\r\n  }\r\n`\r\n\r\n\r\nconst StyleWrapper = (props) => (\r\n    <div>\r\n        <GlobalStyles />\r\n        <ThemeProvider theme={original}>\r\n            {props.children}\r\n        </ThemeProvider>\r\n    </div>\r\n)\r\n\r\nexport default StyleWrapper","import React from 'react'\r\nimport {Window, WindowHeader, WindowContent, Button} from 'react95'\r\nimport Draggable from 'react-draggable'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {CloseButton, MinimizeButton} from './WindowButtons'\r\nimport {closeWindow, selectWindow, updateWindowPosition, minimizeWindow} from '../reducers/windows'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst StandardWindow = (props) => {\r\n\r\n    /* tie the different states together ffs, create hook? */\r\n    const id = props.id\r\n    const {current, last, items} = useSelector(state => state.windows)\r\n    const item = items.find(item => item.id === id)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const close = () => {\r\n        dispatch(closeWindow(id))\r\n\r\n        if (last===id) {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    const getzIndex = () => {\r\n        return (current===id) ? 15 : 11\r\n    }\r\n\r\n    const select = () => {\r\n        dispatch(selectWindow(id))\r\n    }\r\n\r\n    const minimize = () => {\r\n        dispatch(minimizeWindow(item))\r\n    }\r\n\r\n    /* HORRIBLE FOR PERFOMANCE, SHITLOAD OF COMPONENTS ARE RERENDERED A BILLION TIMES FIXXXX PLEASE */\r\n    const drag = (e, position) => {\r\n        const {x, y} = position\r\n        dispatch(updateWindowPosition(item, x, y))\r\n    }\r\n\r\n    if (item.minimized) {\r\n        return null\r\n    }\r\n    return (\r\n        <Draggable\r\n            position={{x: item.x, y: item.y}}\r\n            cancel='strong'\r\n            onMouseDown={() => select()}\r\n            onDrag={drag}\r\n        >\r\n            <div\r\n                style={{display: 'flex', justifyContent: 'center', position: 'absolute', zIndex: getzIndex()}}\r\n            >\r\n                <Window className='window'>\r\n                    <WindowHeader className='window-header'>\r\n                        {props.title}\r\n                        <CloseButton click={close}/>\r\n                        <MinimizeButton click={minimize}/>\r\n                    </WindowHeader>\r\n                    <strong className=\"no-cursor\">\r\n                        <WindowContent>\r\n                            {props.children}\r\n                        </WindowContent>\r\n                    </strong>\r\n                </Window>\r\n            </div>\r\n        </Draggable>\r\n\r\n    )\r\n}\r\n\r\nexport default StandardWindow\r\n","import {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport twoodService from '../services/twoods'\r\n\r\nimport {info, error} from '../reducers/notification'\r\nimport {addTwood, likeTwood, replyTwood, removeTwood} from '../reducers/twoods'\r\n\r\nexport const useField = (type) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const onChange = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const clear = () => {\r\n        setValue('')\r\n    }\r\n\r\n    return {\r\n        input: {\r\n            type,\r\n            value,\r\n            onChange\r\n        },\r\n        clear\r\n    }\r\n}\r\n\r\nexport const useTwood = (id) => {\r\n    const dispatch = useDispatch()\r\n    const {user, token} = useSelector(state => state.session)\r\n    const twood = useSelector(state => state.twoods).find(twood => twood.id === id)\r\n\r\n    const replyField = useField('text')\r\n\r\n    useEffect(() => {\r\n        if (!twood) {\r\n            getTwood()\r\n        }\r\n    }, [id])\r\n\r\n    const getTwood = async () => {\r\n        try {\r\n            const res = await twoodService.getById(id)\r\n\r\n            dispatch(addTwood(res))\r\n        } catch (err) {\r\n            dispatch(error('Error fetching twood', 5))\r\n        }\r\n    }\r\n\r\n    const like = async () => {\r\n        dispatch(likeTwood(twood, token))\r\n    }\r\n\r\n    const reply = async (content, e) => {\r\n        e.preventDefault()\r\n        const newTwood = {\r\n            content: content\r\n        }\r\n\r\n        dispatch(replyTwood(twood, newTwood, token))\r\n    }\r\n\r\n    const remove = async () => {\r\n        dispatch(removeTwood(twood, token))\r\n    }\r\n\r\n    const operations = {\r\n        like: (user) ? like : null,\r\n        reply: (user) ? reply : null,\r\n        remove: (user && twood) ? (user.id === twood.user.id) ? remove : null : null\r\n    }\r\n\r\n    return {\r\n        twood,\r\n        operations,\r\n        replyField\r\n    }\r\n}\r\n\r\nexport const usePages = (initialState) => {\r\n    const [index, setIndex] = useState(0)\r\n    const [pages, setPages] = useState([])\r\n    const [pageSize, setPageSize] = useState(10)\r\n    const [sortOrder, setSortOrder] = useState(false)\r\n\r\n    const initPages = (list) => {\r\n        const nofPages = Math.ceil(list.length/pageSize)\r\n\r\n        let temp = []\r\n\r\n        let count = 0\r\n\r\n        for (let i=0;i<nofPages;i++) {\r\n            temp[i] = []\r\n            for (let j=0;j<pageSize;j++) {\r\n                temp[i][j] = list[count]\r\n                count++\r\n                if (count === list.length) {\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        setPages(temp)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (initialState[0]) {\r\n            initPages(initialState)\r\n        }\r\n    }, [initialState])\r\n\r\n    const nextPage = () => {\r\n        setIndex(index+1)\r\n    }\r\n\r\n    const prevPage = () => {\r\n        setIndex(index-1)\r\n    }\r\n\r\n    const sort = (head) => {\r\n        setSortOrder(!sortOrder)\r\n\r\n        initPages(initialState.sort((a, b) => {\r\n            if (sortOrder) {\r\n                return a[head] > b[head]\r\n            } else {\r\n                return a[head] < b[head]\r\n            }\r\n        }))\r\n    }\r\n\r\n    const operations = {\r\n        next: (index != pages.length-1) ? nextPage : null,\r\n        prev: (index > 0) ? prevPage : null,\r\n        sort\r\n    }\r\n\r\n    const current = (pages[0]) ? pages[index] : []\r\n\r\n    return {\r\n        current,\r\n        operations\r\n    }\r\n}","import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {Table, TableHead, TableBody, TableRow, TableHeadCell, TableDataCell, Button} from 'react95'\r\n\r\nimport {usePages} from '../hooks'\r\n\r\nconst tableTypes = {\r\n    twoods: ['content', 'likes'],\r\n    users: ['username'],\r\n    rooms: ['name']\r\n}\r\n\r\nconst StandardTable = ({initialState, type}) => {\r\n    const history = useHistory()\r\n    const {current, operations} = usePages(initialState)\r\n\r\n    const {next, prev, sort} = operations\r\n\r\n    const tableType = tableTypes[type]\r\n\r\n    if (!current[0]) return null\r\n\r\n    return (\r\n        <div>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow head>\r\n                        {tableType.map(head => {\r\n                            return (\r\n                                <TableHeadCell onClick={() => sort(head)} key={head}>\r\n                                    {head}\r\n                                </TableHeadCell>\r\n                            )\r\n                        })}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {current.map(item => {\r\n                        return (\r\n                            <TableRow\r\n                                key={item.id}\r\n                                onClick={() => history.push(`/${type}/${item.id}`)}\r\n                            >\r\n                                {tableType.map(cell => {\r\n                                    return <TableDataCell key={cell}>{item[cell]}</TableDataCell>\r\n                                })}\r\n                            </TableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n            <Button\r\n                disabled={!prev}\r\n                onClick={() => prev()}\r\n            >\r\n                Prev Page\r\n            </Button>\r\n            <Button\r\n                disabled={!next}\r\n                onClick={() => next()}\r\n            >\r\n                    Next Page\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default StandardTable\r\n","import React from 'react'\r\n\r\nimport StandardTable from '../components/StandardTable'\r\n\r\nexport const Profile = ({user}) => {\r\n    if (!user) return null\r\n\r\n    if (user) {\r\n        return (\r\n            <div>\r\n                <p>username: {user.username} </p>\r\n                <p>id: {user.id} </p>\r\n                <StandardTable initialState={user.twoods} type='twoods'/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react'\r\n\r\nimport StandardWindow from '../StandardWindow'\r\nimport StandardTable from '../StandardTable'\r\nimport {Profile} from '../Profile'\r\n\r\nexport const SingleUser = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='User' id={id}>\r\n            <Profile user={initialState}/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const Users = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Users'  id={id}>\r\n            <StandardTable initialState={initialState} type='users'/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\n\r\nexport default Users","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useTwood} from '../hooks'\r\n\r\nimport {ToolPanel, Fieldset, Button, Divider, TextField} from 'react95'\r\n\r\nexport const TwoodReply = ({id}) => {\r\n    const {twood, operations} = useTwood(id)\r\n\r\n    if (!twood) return null\r\n\r\n    const {user} = twood\r\n    const {like} = operations\r\n\r\n    return (\r\n        <Fieldset\r\n            label={user.username}\r\n        >\r\n            <Link to={`/twoods/${twood.id}`}>\r\n                {twood.content}\r\n                <p>LIKES: {twood.likes}</p>\r\n            </Link>\r\n        </Fieldset>\r\n    )\r\n\r\n}\r\n\r\nexport const Twood = ({id}) => {\r\n    const {twood, operations, replyField} = useTwood(id)\r\n\r\n    if (!twood) return null\r\n\r\n    const {like, reply, remove} = operations\r\n    const {user} = twood\r\n\r\n    return (\r\n        <div>\r\n            <Fieldset label={user.username}>\r\n                {twood.content}\r\n                <p>LIKES: {twood.likes}</p>\r\n            </Fieldset>\r\n            {reply ?\r\n                <form>\r\n                    <TextField {...replyField.input} />\r\n                    <Button\r\n                        size='sm'\r\n                        onClick={(e) => {operations.reply(replyField.input.value, e)}}\r\n                    >\r\n                        REPLY\r\n                    </Button>\r\n                </form>\r\n                : null\r\n            }\r\n            {like ? <Button size='sm' onClick={() => like()}>LIKE</Button> : null}\r\n            {remove ? <Button size='sm' onClick={() => remove()}>REMOVE</Button> : null}\r\n\r\n            <Divider/>\r\n\r\n            {twood.replies.map(reply => {\r\n                return (\r\n                    <TwoodReply key={reply.id} id={reply.id}/>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\n\r\nimport StandardTable from '../components/StandardTable'\r\n\r\nexport const Room = ({room}) => {\r\n    if (!room) return null\r\n\r\n    return (\r\n        <div>\r\n            <p>name: {room.name} </p>\r\n            <p>id: {room.id} </p>\r\n            <StandardTable initialState={room.twoods} type='twoods'/>\r\n        </div>\r\n    )\r\n}\r\n","import SignUp from './SignUp'\r\nimport SignIn from './SignIn'\r\nimport OwnUser from './OwnUser'\r\nimport {Users, SingleUser} from './Users'\r\nimport {Twoods, SingleTwood, NewTwood} from './Twoods'\r\nimport {Rooms, SingleRoom, NewRoom} from './Rooms'\r\n\r\nexport const windowIndex = {\r\n    signin: SignIn,\r\n    signup: SignUp,\r\n    twood: SingleTwood,\r\n    twoods: Twoods,\r\n    newtwood: NewTwood,\r\n    room: SingleRoom,\r\n    rooms: Rooms,\r\n    newroom: NewRoom,\r\n    user: SingleUser,\r\n    users: Users,\r\n    ownuser: OwnUser\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Button, TextField} from 'react95'\r\n\r\nimport StandardWindow from '../StandardWindow'\r\nimport {manualSignIn} from '../../reducers/session'\r\nimport {closeWindow} from '../../reducers/windows'\r\nimport {useField} from '../../hooks'\r\n\r\nconst SignIn = ({initialState, id}) => {\r\n    const history = useHistory()\r\n\r\n    const nameField = useField('text')\r\n    const passwordField = useField('text')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault()\r\n\r\n        const username = nameField.input.value\r\n        const password = passwordField.input.value\r\n\r\n        dispatch(manualSignIn(username, password, id))\r\n\r\n        nameField.clear()\r\n        passwordField.clear()\r\n    }\r\n\r\n    const openSignUp = () => {\r\n        dispatch(closeWindow(id))\r\n        history.push('/signup/')\r\n    }\r\n\r\n    return (\r\n        <StandardWindow title='Sign In' id={id}>\r\n            <form>\r\n                User Name: <TextField {...nameField.input} />\r\n                Password: <TextField {...passwordField.input} />\r\n\r\n                <Button\r\n                    styles={{float: 'right'}}\r\n                    id=\"signin-button\" type=\"submit\"\r\n                    primary={true}\r\n                    onClick={signIn}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </form>\r\n            not a twooder user?\r\n            <Button\r\n                id=\"redirect-sign-up-button\"\r\n                type=\"submit\"\r\n                onClick={() => openSignUp()}\r\n            >\r\n            Sign Up!\r\n            </Button>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Button, TextField} from 'react95'\r\n\r\nimport StandardWindow from '../StandardWindow'\r\nimport {useField} from '../../hooks'\r\nimport {info, error} from '../../reducers/notification'\r\nimport userService from '../../services/users'\r\n\r\nconst LogIn = ({initialState, id}) => {\r\n    const nameField = useField('text')\r\n    const passwordField = useField('text')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const signUp = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const user = {\r\n            username: nameField.input.value,\r\n            password: passwordField.input.value\r\n        }\r\n        try {\r\n            await userService.create(user)\r\n            dispatch(info('Successfully created user', 5))\r\n        } catch (err) {\r\n            dispatch(error('Failed to create user', 5))\r\n        }\r\n\r\n        nameField.clear()\r\n        passwordField.clear()\r\n    }\r\n\r\n    return (\r\n        <StandardWindow title='Sign Up' id={id}>\r\n            <form>\r\n                User Name: <TextField {...nameField.input} />\r\n                Password: <TextField {...passwordField.input} />\r\n\r\n                <Button\r\n                    id=\"signin-button\"\r\n                    type=\"submit\"\r\n                    onClick={signUp}\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </form>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Button, TextField} from 'react95'\r\n\r\nimport twoodService from '../../services/twoods'\r\nimport {useField} from '../../hooks'\r\nimport StandardWindow from '../StandardWindow'\r\nimport StandardTable from '../StandardTable'\r\nimport {Twood} from '../Twood'\r\nimport {info, error} from '../../reducers/notification'\r\n\r\nexport const SingleTwood = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Twood' id={id}>\r\n            <Twood id={initialState}/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const Twoods = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Twoods' id={id}>\r\n            <StandardTable initialState={initialState} type='twoods'/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const NewTwood = ({initialState, id}) => {\r\n    const token = useSelector(state => state.session.token)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const titleField = useField('text')\r\n    const contentField = useField('text')\r\n\r\n    const create = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const newTwood = {\r\n            title: titleField.input.value,\r\n            content: contentField.input.value\r\n        }\r\n\r\n        try {\r\n            const res = await twoodService.create(newTwood, token)\r\n\r\n            dispatch(info('Twood successfully created', 5))\r\n\r\n            history.push(`twoods/${res.id}`)\r\n        } catch (err) {\r\n            dispatch(error('Error creating twood', 5))\r\n        }\r\n\r\n        contentField.clear()\r\n    }\r\n\r\n    return (\r\n        <StandardWindow title='New Twood' id={id}>\r\n            <form>\r\n                content:\r\n                <TextField multiline={true} {...contentField.input} />\r\n\r\n                <Button id=\"twood-button\" type=\"submit\" onClick={create}>\r\n                    Twood\r\n                </Button>\r\n            </form>\r\n        </StandardWindow>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {TextField, Button} from 'react95'\r\n\r\nimport roomService from '../../services/rooms'\r\nimport {useField} from '../../hooks'\r\nimport {Room} from '../Room'\r\nimport StandardWindow from '../StandardWindow'\r\nimport StandardTable from '../StandardTable'\r\nimport {info, error} from '../../reducers/notification'\r\n\r\nexport const SingleRoom = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Room' id={id}>\r\n            <Room room={initialState}/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const Rooms = ({initialState, id}) => {\r\n    return (\r\n        <StandardWindow title='Rooms' id={id}>\r\n            <StandardTable initialState={initialState} type='rooms'/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\nexport const NewRoom = ({initialState, id}) => {\r\n    const nameField = useField('text')\r\n    const token = useSelector(state => state.session.token)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const create = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const newRoom = {\r\n            name: nameField.input.value\r\n        }\r\n\r\n        try {\r\n            const res = await roomService.create(newRoom, token)\r\n\r\n            dispatch(info('Room successfully created', 5))\r\n\r\n            history.push(`rooms/${res.id}`)\r\n        } catch (err) {\r\n            dispatch(error('Error creating Room', 5))\r\n        }\r\n\r\n        nameField.clear()\r\n    }\r\n\r\n    return (\r\n        <StandardWindow title='New Room' id={id}>\r\n            <form>\r\n                name:\r\n                <TextField {...nameField.input} />\r\n\r\n                <Button type=\"submit\" onClick={create}>\r\n                    Create\r\n                </Button>\r\n            </form>\r\n        </StandardWindow>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\n\r\nimport StandardWindow from '../StandardWindow'\r\nimport {Profile} from '../Profile'\r\n\r\nconst OwnUser = ({initialState, id}) => {\r\n    const {user} = useSelector(state => state.session)\r\n\r\n    return (\r\n        <StandardWindow title='Your Profile' id={id}>\r\n            <Profile user={user}/>\r\n        </StandardWindow>\r\n    )\r\n}\r\n\r\n\r\nexport default OwnUser","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\n\r\nimport {windowIndex} from './components/windows/'\r\n\r\nfunction WindowRenderer() {\r\n    const windows = useSelector(state => state.windows)\r\n\r\n    return (\r\n        <div style={{position: 'relative'}}>\r\n            {windows.items.map(item => {\r\n                const Component = windowIndex[item.type]\r\n\r\n                return (\r\n                    <Component\r\n                        key={item.id}\r\n                        initialState={item.initialState}\r\n                        id={item.id}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WindowRenderer\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport Notification from './components/Notification'\r\nimport NavBar from './components/NavBar'\r\nimport Footer from './components/Footer'\r\n\r\nimport Routing from './pages/'\r\nimport StyleWrapper from './styles'\r\nimport WindowRenderer from './WindowRenderer'\r\nimport {continueSession} from './reducers/session'\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(continueSession())\r\n    }, [])\r\n\r\n    return (\r\n        <StyleWrapper>\r\n            <NavBar/>\r\n            <Notification/>\r\n            <Routing/>\r\n            <WindowRenderer/>\r\n            <Footer/>\r\n        </StyleWrapper>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport notificationReducer from './reducers/notification'\r\nimport sessionReducer from './reducers/session'\r\nimport windowReducer from './reducers/windows'\r\nimport twoodReducer from './reducers/twoods'\r\n\r\nconst reducer = combineReducers({\r\n    notification: notificationReducer,\r\n    session: sessionReducer,\r\n    windows: windowReducer,\r\n    twoods: twoodReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\n\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}